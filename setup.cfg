[metadata]
name = coronaloopy
author = Will Barnes
author_email = will.t.barnes@gmail.com
license = GNU GPL v3+
license_file = licenses/LICENSE.rst
url = 
description = Python package for coronal loop models
long_description = file: README.rst

[options]
zip_safe = False
packages = find:
python_requires = >=3.8
setup_requires = setuptools_scm
install_requires = 
    sunpy>=3.0

[options.extras_require]
all =
test =
    pytest
    pytest-astropy
    pytest-doctestplus
    pytest-cov
docs =
    sphinx
    sphinx-automodapi
    towncrier
    sunpy-sphinx-theme
    sphinx-gallery

[options.package_data]
coronaloopy = data/*

[tool:pytest]
testpaths = "coronaloopy" "docs"
norecursedirs = ".tox" "build" "docs[\/]_build" "docs[\/]generated" "*.egg-info" "examples" ".jupyter" ".history" "tools"
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst
remote_data_strict = True

[coverage:run]
omit =
  coronaloopy/__init*
  coronaloopy/conftest.py
  coronaloopy/*setup_package*
  coronaloopy/tests/*
  coronaloopy/*/tests/*
  coronaloopy/extern/*
  coronaloopy/version*
  */coronaloopy/__init*
  */coronaloopy/conftest.py
  */coronaloopy/*setup_package*
  */coronaloopy/tests/*
  */coronaloopy/*/tests/*
  */coronaloopy/extern/*
  */coronaloopy/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_
